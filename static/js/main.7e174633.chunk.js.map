{"version":3,"sources":["logo.svg","components/AccountBalance/AccountBalance.jsx","components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","components/AppHeader/AppHeader.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","AccountBalance","props","buttonText","showBalance","balance","react_default","a","createElement","className","amount","onClick","handleBalance","Coin","name","ticker","price","Fragment","event","preventDefault","handleRefresh","id","CoinList","coinData","map","_ref","key","Coin_Coin","AppHeader","src","logo","alt","Component","COIN_COUNT","coinsUrl","tickerUrl","App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","_React$useState3","_React$useState4","setShowBalance","_React$useState5","_React$useState6","setCoinData","componentDidMount","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","coinIds","promises","coinPriceData","wrap","_context","prev","next","axios","get","sent","data","slice","coin","Promise","all","symbol","parseFloat","Number","quotes","toFixed","stop","apply","this","arguments","useEffect","length","_ref2","_callee2","valueChangeTicker","keyData","newCoinData","_context2","values","newValues","objectSpread","console","log","_x","AppHeader_AppHeader_AppHeader","AccountBalance_AccountBalance","oldValue","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7e174633.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport './AccountBalance.css';\r\n\r\nexport default function AccountBalance(props) {\r\n\r\n    const buttonText = props.showBalance \r\n    ? 'Show Balance' : 'Hide Balance' ;\r\n\r\n    let balance = props.showBalance ? '' : <div className='balance_text'>Balance: ${props.amount}</div>;\r\n\r\n    return (\r\n      <section>\r\n        { balance }\r\n        <button className=\"balance_btn\" onClick={props.handleBalance} >{buttonText}</button> \r\n      </section>\r\n    );\r\n}\r\n\r\nAccountBalance.propTypes = {\r\n    amount: PropTypes.number.isRequired,\r\n}","import React from 'react'\r\nimport './Coin.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Coin(props)  {\r\n  \r\n// we need to add = () =>, cause we need to get our values/this\r\n  const handleClick = (event) => {\r\n    event.preventDefault();\r\n    props.handleRefresh(props.id);\r\n  }\r\n\r\n    return (\r\n      <tr className='coin-row'>\r\n      <td>{props.name}</td>\r\n      <td>{props.ticker}</td> \r\n      <td>${props.price}</td>\r\n      {props.showBalance ? <><td>{props.balance}</td></> : '' }\r\n      <td>\r\n          <button onClick={handleClick}>Refresh</button>\r\n      </td>\r\n    </tr>\r\n    );\r\n}\r\n\r\nCoin.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string.isRequired,\r\n  price: PropTypes.string.isRequired,\r\n}","import React from 'react'\r\nimport Coin from '../Coin/Coin';\r\n\r\nexport default function CoinList(props) {\r\n    return (\r\n        <table className='coin-table'>\r\n        <thead>\r\n          <tr>\r\n            <th>Name:</th>\r\n            <th>Ticker:</th>\r\n            <th>Price:</th>\r\n            { props.showBalance ? <th>Balance</th> : '' }\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {\r\n          props.coinData.map(({key, name, ticker, balance, price}) =>\r\n            <Coin \r\n            key={key} \r\n            id={key}\r\n            handleRefresh={props.handleRefresh} \r\n            name={name} \r\n            ticker={ticker}\r\n            showBalance={props.showBalance}\r\n            balance={balance} \r\n            price={price} />\r\n              )\r\n        }\r\n        </tbody>\r\n        </table>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport logo from '../../logo.svg';\r\nimport './AppHeader.css';\r\n\r\nexport default class AppHeader extends Component {\r\n  render() {\r\n    return (\r\n    <header className=\"App-header\">\r\n        <img src={logo} alt=\"React logo\" className='App-logo' /> \r\n        <h1 className='App-title'>\r\n         Coin Exchange \r\n        </h1>\r\n    </header>\r\n    )\r\n  }\r\n}\r\n","import React, {useEffect} from 'react';\nimport './App.css';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport CoinList from './components/CoinList/CoinList';\nimport AppHeader from './components/AppHeader/AppHeader';\nimport axios from 'axios';\n\n\nconst COIN_COUNT = 10;\nconst coinsUrl = 'https://api.coinpaprika.com/v1/coins';\nconst tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n\nfunction App(props) {\n\n  const [balance, setBalance] = React.useState(10000);\n  const [showBalance, setShowBalance] = React.useState(true);\n  const [coinData, setCoinData] = React.useState([]);\n  \n  const componentDidMount = async () => {\n    const response = await axios.get(coinsUrl)\n      const coinIds = response.data.slice(0, COIN_COUNT).map(coin => coin.id);\n      const promises = coinIds.map(id => axios.get(tickerUrl + id));\n      const coinData = await Promise.all(promises);\n  \n      const coinPriceData = coinData.map(function(response){\n        const coin = response.data;\n        return {\n          key: coin.id,\n          name: coin.name,\n          ticker: coin.symbol,\n          balance: 0, \n          price: parseFloat(Number(coin.quotes[\"USD\"].price)).toFixed(3)\n        };\n      }) \n  \n      // this.setState({coinData: coinPriceData});\n      setCoinData(coinPriceData);\n  }\n\n  useEffect(function(){\n    if(coinData.length === 0){\n      componentDidMount();\n    }\n  });\n  \n  const handleRefresh = async (valueChangeTicker) => {\n   const keyData =  await axios.get( tickerUrl + valueChangeTicker);\n   const newCoinData = coinData.map(function( values ) {\n    let newValues = {...values};\n    if(values.key === valueChangeTicker){\n      console.log(keyData);\n        newValues.price =  parseFloat(Number(keyData.data.quotes[\"USD\"].price)).toFixed(3)\n      }\n      return newValues;\n    });\n    // this.setState({coinData: newCoinData});\n    setCoinData(newCoinData);\n\n  }\n\n\n  const handleBalance = () => {\n    setShowBalance(oldValue => !oldValue);\n  }\n\n  return (\n  <div className=\"App\">\n      <AppHeader />\n      \n      <AccountBalance \n      amount={balance} \n      handleBalance={handleBalance} \n      showBalance={showBalance}\n      />\n      \n      <CoinList \n      coinData={coinData} \n      showBalance={!showBalance } \n      handleRefresh={handleRefresh} />\n  </div>\n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}